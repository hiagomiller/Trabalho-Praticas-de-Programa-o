@@ -0,0 +1,53 @@
from lib.interface import *
def arquivoExiste(nome):
    try:
        a = open(nome, 'rt')
        a.close()
    except FileNotFoundError:
        # exceção gerada quando arquivo ou diretório não existe.
        return False
    else:
        return True
def criarArquivo(nome):
    try:
        a = open(nome, 'wt+')
        a.close()
    except:
        print('Houve um ERRO na criação do arquivo!')
    else:
        print(f'Arquivo {nome} criado com sucesso!')
def lerArquivo(nome):
    try:
        a = open(nome, 'rt')
    except:
        print('Arquivo inexistente!')
    else:
        cabeçalho('PRODUTOS CADASTRADOS')
        for linha in a:
            dado = linha.split(';')
            dado[1] = dado[1].replace('\n', '')
            print(f'{dado[0]:<30}{dado[1]:>3}')
    finally:
        a.close()

def excluirArq(nome):
    import os
    os.remove("exemploarquivo.txt")
    print('Produtos removidos.')
    a = open("exemploarquivo.txt", "w")



def cadastrar(arq, nome='desconhecido', quantidade=0):
    try:
        a = open(arq, 'at')
    except:
        print('Houve um ERRO na abertura do arquivo!')
    else:
        try:
            a.write(f'{nome};{quantidade}\n')
        except:
            print('Houve um ERRO na hora de escrever os dados!')
        else:
            print(f'Novo registro de {nome} adicionado.')
            a.close() 
 36  ExemploArquivo_lib_interface___init__.py 
@@ -0,0 +1,36 @@
#ValueError:quando um argumento de uma função tem o tipo certo,
# mas um valor inadequado.
#TypeError:quando é passado um objeto de um tipo diferente do
# tipo que a função espera como argumento.
# KeyboardInterrupt: quando o usuário pressiona a tecla de
# interrupção (Ctrl-C ou Delete ).
def leiaInt(msg):
    while True:
        try:
            n = int(input(msg))
        except (ValueError, TypeError):
            print('\033[31mERRO:digite um número inteiro\033[m')
            continue
        except (KeyboardInterrupt):
            print('\n\033[31mUsuário não digitou o número.\033[m')
            return 0
        else:
            return n

def linha(tam=42):
    return '-' * tam

def cabeçalho(txt):
    print(linha())
    print(txt.center(42))
    print(linha())

def menu(lista):
    cabeçalho('MENU PRINCIPAL')
    c = 1
    for item in lista:
        print(f'\033[33m{c}\033[m - \033[34m{item}\033[m')
        c += 1
    print(linha())
    opc = leiaInt('\033[32mSua Opção: \033[m')
    return opc 
 31  ExemploArquivo_sistema.py 
@@ -0,0 +1,31 @@
from lib.interface import *
from lib.arquivo import *
from time import sleep
arq = 'exemploarquivo.txt'
if not arquivoExiste(arq):
    criarArquivo(arq)
while True:
    resposta = menu(['Listar produto','Cadastrar produto','Remover todos produto', 'Sair'])
    if resposta == 1:
        # Opção de listar o conteúdo de um arquivo.
        lerArquivo(arq)
    elif resposta == 2:
        # Opção de cadastrar um novo produto.
        cabeçalho('NOVO CADASTRO')
        nome = str(input('Nome: '))
        quantidade = leiaInt('Quantidade: ')
        cadastrar(arq, nome, quantidade)

    elif resposta == 3:
        #Opção de limpar o TXT.
        excluirArq(arq)

    elif resposta == 4:
        # Opção de sair do sistema.
        cabeçalho('Saindo do sistema... Até logo!')
        break

    else:
        # Digitou uma opção errada no menu.
        print('\033[31mERRO! Digite uma opção válida!\033[m')
    sleep(2) 
